---
import type { Image } from "../types";

interface Props extends Image {
  loading: HTMLImageElement["loading"];
}

const {
  backgroundColor = "transparent",
  caption,
  color,
  height,
  id,
  largeUrl,
  loading,
  mobileUrl,
  url,
  width,
} = Astro.props;

const textColor = color === "black" ? "var(--black)" : "var(--white)";
const scaledHeight = Math.floor(height * 0.52);
const scaledWidth = Math.floor(width * 0.52);
---

<section
  id={id}
  style={`--bg-color: ${backgroundColor}; --text-color: ${textColor};`}
>
  <figure>
    <a href={`#${id}`}>
      <picture>
        <source srcset={mobileUrl} media="(width <= 40rem)" />
        <source srcset={url} media="(40rem < width < 100rem)" />
        <source srcset={largeUrl} media="(width >= 100rem)" />
        <img
          alt=""
          height={scaledHeight}
          loading={loading}
          src={mobileUrl}
          width={scaledWidth}
        />
      </picture>
    </a>
    {caption ? <figcaption>{caption}</figcaption> : null}
  </figure>
</section>

<style>
  :root {
    --size: min(
      calc(50vw - var(--gap) * 2),
      calc(100vh - var(--gap) * 4),
      calc(var(--max-size) - var(--gap) * 2)
    );
  }

  @keyframes target {
    0%, 80% {
      background-color: var(--slime);
      color: var(--black);
    }
    100% {
      background-color: var(--bg-color);
    }
  }

  section {
    align-items: center;
    background-color: var(--bg-color);
    display: grid;
    min-height: min(70vw, 100vh);
    padding: var(--gap);
    place-content: center;
    scroll-snap-align: start;
    color: var(--text-color);
    
    &:target {
        animation: target 3s ease;
    }
    
    &:nth-child(odd) a { cursor: url(/prev.svg), auto; }
    &:nth-child(even) a { cursor: url(/next.svg), auto; }
    &:last-child a { cursor: default; }
  }

  figure {
    display: grid;
    gap: calc(var(--gap) * 0.25);
    margin: 0 0 calc(-1 * (var(--gap) * 0.25 + var(--md))) 0;
    width: fit-content;
  }

  picture {
    display: block;
    margin: 0;
    width: fit-content;
  }

  img {
    background-color: var(--slime);
    display: block;
    height: auto;
    max-height: var(--size);
    max-width: var(--size);
    width: auto;
  }

  figcaption {
    font-size: var(--md);
    line-height: 1;
    margin: 0;
    opacity: 0.8;
    padding-inline: calc(var(--gap) * 0.25);
    text-align: end;
    user-select: text;
  }

  @media (width <= 40rem) {
    section {
      height: auto;
      min-height: 100vh;
      padding: calc(var(--gap) * 0.5);
      padding-block-end: calc(var(--gap) * 4);
    }

    section a:link {
      cursor: pointer;
    }

    img {
      max-width: calc(100vw - var(--gap));
      max-height: calc(100vw - var(--gap));
    }
  }
</style>