---
interface Props {
	backgroundColor: string;
	caption?: string;
	color: string;
	height: number;
	id: string;
	loading: HTMLImageElement["loading"];
	responsiveUrl: string;
	src: string;
	width: number;
}
const {
	backgroundColor,
	caption,
	color,
	height,
	id,
	loading,
	responsiveUrl,
	src,
	width,
} = Astro.props;
---

<section
  id={id}
  style={`background-color: ${backgroundColor ?? "transparent"}`}
>
  <figure>
      <a href={`#${id}`}>
        <picture>
          <source srcset={responsiveUrl} media="(max-width: 50rem)" />
          <img
            alt=""
            height={~~(height * 0.52)}
            loading={loading}
            src={src}
            width={~~(width * 0.52)}
          />
        </picture>
      </a>
      {caption ? <figcaption class={color}>{caption}</figcaption> : null}
    </figure>
</section>

<style>
  :root {
    --size: min(
      calc(50vw - var(--gap) * 2),
      calc(100vh - var(--gap) * 4),
      var(--max-size)
    );
  }

  section {
    align-items: start;
    display: grid;
    justify-content: start;
    min-height: min(100vw, 100vh);
    padding: var(--gap);
    scroll-snap-align: start;
    text-transform: uppercase;

    &:target {
      background-color: var(--slime) !important;
      color: var(--black) !important;
    }
  }

  @media (width <= 40rem) {
    section {
      display: grid;
      height: auto;
      min-height: 100vh;
      padding-block-end: calc(var(--gap) * 4);
      padding: calc(var(--gap) * 0.5);
      place-items: center;
    }
  }

  section a {
    display: inline-block;
    text-decoration: none;
  }

  picture {
    width: fit-content;
  }

  figure {
    display: grid;
    gap: min(0.5cqh, calc(var(--gap) * 0.5));
    margin: 0;
  }

  img {
    display: block;
    height: auto;
    max-height: var(--size);
    max-width: var(--size);
    width: auto;
  }

  @media (width <= 40rem) {
    img {
      max-width: calc(100vw - var(--gap));
      max-height: calc(100vw - var(--gap));
    }
  }

  figcaption {
    color: var(--black);
    font-size: clamp(0.65rem, 0.65vw, 0.8rem);
    margin: 0;
    opacity: 0.75;
    padding-inline: calc(var(--gap) * 0.125);
    text-align: end;
    -webkit-user-select: text;
    user-select: text;

    &.white {
      color: var(--white);
    }
  }
</style>
