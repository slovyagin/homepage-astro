---
interface Props {
  backgroundColor: string;
  caption?: string;
  color: string;
  height: number;
  id: string;
  loading: HTMLImageElement["loading"];
  responsiveUrl: string;
  src: string;
  width: number;
}
const {
  backgroundColor,
  caption,
  color,
  height,
  id,
  loading,
  responsiveUrl,
  src,
  width,
} = Astro.props;
---

<section id={id} style={`background-color: ${backgroundColor}`}>
  <a href={`#${id}`}>
    <figure>
      <picture>
        <source srcset={responsiveUrl} media="(max-width: 50rem)" />
        <img
          src={src}
          loading={loading}
          height={~~(height * 0.52)}
          width={~~(width * 0.52)}
        />
      </picture>
      {caption ? <figcaption class={color}>{caption}</figcaption> : null}
    </figure>
  </a>
</section>

<style>
  :root {
    --size: min(calc(50vw - var(--gap) * 2), calc(100vh - var(--gap) * 4));
  }
  section {
    height: 100vh;
    padding: var(--gap);
    text-transform: uppercase;
    scroll-snap-align: start;

    &:target {
      background-color: var(--slime) !important;
      color: var(--black) !important;
    }
  }

  @media (width <= 50rem) {
    section {
      height: auto;
      min-height: 40vh;
      padding: calc(var(--gap) * 0.5);
      padding-block-end: calc(var(--gap) * 4);
    }
  }

  section a {
    display: inline-block;
    text-decoration: none;
  }

  figure {
    margin: 0;
    display: grid;
    gap: 0.5cqh;
  }

  img {
    display: block;
    height: auto;
    max-height: var(--size);
    max-width: var(--size);
    width: auto;
  }

  @media (width <= 50rem) {
    img {
      max-width: calc(100vw - var(--gap));
      max-height: calc(100vw - var(--gap));
    }
  }

  figcaption {
    color: var(--black);
    font-size: clamp(0.65rem, 0.65vw, 1rem);
    margin: 0;
    opacity: 0.75;
    padding-inline: calc(var(--gap) * 0.125);
    text-align: end;
    user-select: text;

    &.white {
      color: var(--white);
    }
  }
</style>
